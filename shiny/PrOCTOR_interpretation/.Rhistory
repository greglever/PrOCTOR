siRNA_UP=genes2[log2(siRNA_FC)>(FC_thresh)]
GSK343_rep1_DN=genes2[log2(drug_rep1_FC)<(-1*FC_thresh)]
GSK343_rep1_UP=genes2[log2(drug_rep1_FC)>(FC_thresh)]
GSK343_rep2_DN=genes2[log2(drug_rep2_FC)<(-1*FC_thresh)]
GSK343_rep2_UP=genes2[log2(drug_rep2_FC)>(FC_thresh)]
sig_list=list(siRNA_DN,GSK343_rep1_DN,GSK343_rep2_DN,siRNA_UP,GSK343_rep1_UP,GSK343_rep2_UP)
names(sig_list)=c("siRNA-EZH2_DN","GSK343_rep1_DN","GSK343_rep2_DN","siRNA-EZH2_UP","GSK343_rep1_UP","GSK343_rep2_UP")
# k = the number of genes in the intersection of the query set with a set from MSigDB
# K = the number of genes in the set from MSigDB
# N = the total number of gene universe (all known human gene symbols)
# n = the number of genes in the query set
MSigDB_overap_test<-function(k,K,N,n){phyper(k-1,K,N-K,n,lower.tail=FALSE)}
# correct with benjamani hochberg
results_p=results_q=c()
for(j in 1:length(sig_list)){
geneset_p=rep(NA,length(MSigDB$genesets)+2)
for(ind in 1:length(MSigDB$genesets)){
geneset_p[ind]=MSigDB_overap_test(length(intersect(sig_list[[j]],MSigDB$genesets[[ind]])),length(MSigDB$genesets[[ind]]),universe_size,length(sig_list[[j]]))
}
geneset_p[ind+1]=MSigDB_overap_test(length(intersect(sig_list[[j]],LNCAP_down)),length(LNCAP_down),universe_size,length(sig_list[[j]]))
geneset_p[ind+2]=MSigDB_overap_test(length(intersect(sig_list[[j]],LNCAP_up)),length(LNCAP_up),universe_size,length(sig_list[[j]]))
geneset_q=qvalue(geneset_p,lambda = 0,fdr.level = 0.05)$qvalues[c(sapply(genesets_interest,function(x) which(MSigDB$geneset.names==x)),length(MSigDB$genesets)+1,length(MSigDB$genesets)+2)]
results_p=cbind(results_p,geneset_p[c(sapply(genesets_interest,function(x) which(MSigDB$geneset.names==x)),length(MSigDB$genesets)+1,length(MSigDB$genesets)+2)])
results_q=cbind(results_q,geneset_q)
}
colnames(results_p)=colnames(results_q)=names(sig_list)
rownames(results_p)=rownames(results_q)=c(genesets_interest,"NMYC Down","NMYC Up")
pvals=results_q
pvals2=matrix(as.numeric(unlist(pvals)),dim(pvals));rownames(pvals2)=rownames(pvals);colnames(pvals2)=colnames(pvals)
pvals_col=pvals2
high.significant=unlist(pvals2[pvals2<0.01&!is.na(pvals2)])#;high.significant=high.significant[!is.na(high.significant)]
yellow.scale=rgb((colorRamp(c("red","yellow"))(range01(log((c(0.01,high.significant))))))/255)[2:(1+length(high.significant))]
yellow.scale=rgb((colorRamp(c("red","yellow"))(range01(sapply(high.significant,function(x) which(sort(high.significant,decreasing = FALSE)==x)[1]))))/255)
no.significant=unlist(pvals2[pvals2>0.05&!is.na(pvals2)])
blue.scale=rgb((colorRamp(c("white", "blue"))(range01((no.significant))))/255)
pvals_col[pvals2>0.05&!is.na(pvals2)]=blue.scale
pvals_col[pvals2<0.01&!is.na(pvals2)]=yellow.scale
pvals_col[pvals2>=0.01&pvals2<=0.05&!is.na(pvals2)]="#F8F8FF"
pvals_col[is.na(pvals2)]="#000000"
pvals_col2=t(pvals_col)
#pvals_col2=t(apply(pvals_col,2,rev))
#pvals_col2=apply(apply((pvals_col),2,rev),1,rev)
temp=matrix(1:length(unlist(pvals_col2)),dim(pvals_col2),byrow = FALSE)
rownames(temp)=(gsub("^X","",gsub("[.]"," ",colnames(pvals_col))))
colnames(temp)=gsub("[_]"," ",(rownames(pvals_col)))
par(mar=c(10,25,4.1,2.1))
image(x = temp,col=unlist(pvals_col2), axes = FALSE);box();grid(nx=(nrow(temp)),ny=(ncol(temp)),lwd=1,lty=1,col="black")
text(y=seq(0, by = 1/(ncol(temp)-1), length.out = ncol(temp)), par("usr")[1],labels = colnames(temp),xpd=TRUE,pos=2);
text(x=seq(0, by =1/(nrow(temp)-1),length.out = nrow(temp)), par("usr")[3] -0.05,labels = rownames(temp), srt=45,adj=1,xpd=TRUE);
FC_thresh=1
siRNA_DN=genes2[log2(siRNA_FC)<(-1*FC_thresh)]
siRNA_UP=genes2[log2(siRNA_FC)>(FC_thresh)]
GSK343_rep1_DN=genes2[log2(drug_rep1_FC)<(-1*FC_thresh)]
GSK343_rep1_UP=genes2[log2(drug_rep1_FC)>(FC_thresh)]
GSK343_rep2_DN=genes2[log2(drug_rep2_FC)<(-1*FC_thresh)]
GSK343_rep2_UP=genes2[log2(drug_rep2_FC)>(FC_thresh)]
sig_list=list(siRNA_DN,GSK343_rep1_DN,GSK343_rep2_DN,siRNA_UP,GSK343_rep1_UP,GSK343_rep2_UP)
names(sig_list)=c("siRNA-EZH2_DN","GSK343_rep1_DN","GSK343_rep2_DN","siRNA-EZH2_UP","GSK343_rep1_UP","GSK343_rep2_UP")
# k = the number of genes in the intersection of the query set with a set from MSigDB
# K = the number of genes in the set from MSigDB
# N = the total number of gene universe (all known human gene symbols)
# n = the number of genes in the query set
MSigDB_overap_test<-function(k,K,N,n){phyper(k-1,K,N-K,n,lower.tail=FALSE)}
# correct with benjamani hochberg
results_p=results_q=c()
for(j in 1:length(sig_list)){
geneset_p=rep(NA,length(MSigDB$genesets)+2)
for(ind in 1:length(MSigDB$genesets)){
geneset_p[ind]=MSigDB_overap_test(length(intersect(sig_list[[j]],MSigDB$genesets[[ind]])),length(MSigDB$genesets[[ind]]),universe_size,length(sig_list[[j]]))
}
geneset_p[ind+1]=MSigDB_overap_test(length(intersect(sig_list[[j]],LNCAP_down)),length(LNCAP_down),universe_size,length(sig_list[[j]]))
geneset_p[ind+2]=MSigDB_overap_test(length(intersect(sig_list[[j]],LNCAP_up)),length(LNCAP_up),universe_size,length(sig_list[[j]]))
geneset_q=qvalue(geneset_p,lambda = 0,fdr.level = 0.05)$qvalues[c(sapply(genesets_interest,function(x) which(MSigDB$geneset.names==x)),length(MSigDB$genesets)+1,length(MSigDB$genesets)+2)]
results_p=cbind(results_p,geneset_p[c(sapply(genesets_interest,function(x) which(MSigDB$geneset.names==x)),length(MSigDB$genesets)+1,length(MSigDB$genesets)+2)])
results_q=cbind(results_q,geneset_q)
}
colnames(results_p)=colnames(results_q)=names(sig_list)
rownames(results_p)=rownames(results_q)=c(genesets_interest,"NMYC Down","NMYC Up")
name_str=paste0("_FCthresh",FC_thresh)
#write.xlsx(results_q,file=path.expand(paste0("~/Dropbox/ElementoLab/Prostate/MYCN/Data/EZH2/results/EZH2_RNAseq_GSEA_HypergeometricTest_Enrichments_GSEAuniverse45956",name_str,".xlsx")),sheetName="q-values",row.names=TRUE)
#write.xlsx(results_p,file=path.expand(paste0("~/Dropbox/ElementoLab/Prostate/MYCN/Data/EZH2/results/EZH2_RNAseq_GSEA_HypergeometricTest_Enrichments_GSEAuniverse45956",name_str,".xlsx")),sheetName="p-values",row.names=TRUE,append = TRUE)
################
# Make Heatmap #
################
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
pvals=results_q
pvals2=matrix(as.numeric(unlist(pvals)),dim(pvals));rownames(pvals2)=rownames(pvals);colnames(pvals2)=colnames(pvals)
pvals_col=pvals2
high.significant=unlist(pvals2[pvals2<0.01&!is.na(pvals2)])#;high.significant=high.significant[!is.na(high.significant)]
yellow.scale=rgb((colorRamp(c("red","yellow"))(range01(log((c(0.01,high.significant))))))/255)[2:(1+length(high.significant))]
yellow.scale=rgb((colorRamp(c("red","yellow"))(range01(sapply(high.significant,function(x) which(sort(high.significant,decreasing = FALSE)==x)[1]))))/255)
no.significant=unlist(pvals2[pvals2>0.05&!is.na(pvals2)])
blue.scale=rgb((colorRamp(c("white", "blue"))(range01((no.significant))))/255)
pvals_col[pvals2>0.05&!is.na(pvals2)]=blue.scale
pvals_col[pvals2<0.01&!is.na(pvals2)]=yellow.scale
pvals_col[pvals2>=0.01&pvals2<=0.05&!is.na(pvals2)]="#F8F8FF"
pvals_col[is.na(pvals2)]="#000000"
pvals_col2=t(pvals_col)
#pvals_col2=t(apply(pvals_col,2,rev))
#pvals_col2=apply(apply((pvals_col),2,rev),1,rev)
temp=matrix(1:length(unlist(pvals_col2)),dim(pvals_col2),byrow = FALSE)
rownames(temp)=(gsub("^X","",gsub("[.]"," ",colnames(pvals_col))))
colnames(temp)=gsub("[_]"," ",(rownames(pvals_col)))
par(mar=c(10,25,4.1,2.1))
image(x = temp,col=unlist(pvals_col2), axes = FALSE);box();grid(nx=(nrow(temp)),ny=(ncol(temp)),lwd=1,lty=1,col="black")
text(y=seq(0, by = 1/(ncol(temp)-1), length.out = ncol(temp)), par("usr")[1],labels = colnames(temp),xpd=TRUE,pos=2);
text(x=seq(0, by =1/(nrow(temp)-1),length.out = nrow(temp)), par("usr")[3] -0.05,labels = rownames(temp), srt=45,adj=1,xpd=TRUE);
FC_thresh=0.75
siRNA_DN=genes2[log2(siRNA_FC)<(-1*FC_thresh)]
siRNA_UP=genes2[log2(siRNA_FC)>(FC_thresh)]
GSK343_rep1_DN=genes2[log2(drug_rep1_FC)<(-1*FC_thresh)]
GSK343_rep1_UP=genes2[log2(drug_rep1_FC)>(FC_thresh)]
GSK343_rep2_DN=genes2[log2(drug_rep2_FC)<(-1*FC_thresh)]
GSK343_rep2_UP=genes2[log2(drug_rep2_FC)>(FC_thresh)]
sig_list=list(siRNA_DN,GSK343_rep1_DN,GSK343_rep2_DN,siRNA_UP,GSK343_rep1_UP,GSK343_rep2_UP)
names(sig_list)=c("siRNA-EZH2_DN","GSK343_rep1_DN","GSK343_rep2_DN","siRNA-EZH2_UP","GSK343_rep1_UP","GSK343_rep2_UP")
# k = the number of genes in the intersection of the query set with a set from MSigDB
# K = the number of genes in the set from MSigDB
# N = the total number of gene universe (all known human gene symbols)
# n = the number of genes in the query set
MSigDB_overap_test<-function(k,K,N,n){phyper(k-1,K,N-K,n,lower.tail=FALSE)}
# correct with benjamani hochberg
results_p=results_q=c()
for(j in 1:length(sig_list)){
geneset_p=rep(NA,length(MSigDB$genesets)+2)
for(ind in 1:length(MSigDB$genesets)){
geneset_p[ind]=MSigDB_overap_test(length(intersect(sig_list[[j]],MSigDB$genesets[[ind]])),length(MSigDB$genesets[[ind]]),universe_size,length(sig_list[[j]]))
}
geneset_p[ind+1]=MSigDB_overap_test(length(intersect(sig_list[[j]],LNCAP_down)),length(LNCAP_down),universe_size,length(sig_list[[j]]))
geneset_p[ind+2]=MSigDB_overap_test(length(intersect(sig_list[[j]],LNCAP_up)),length(LNCAP_up),universe_size,length(sig_list[[j]]))
geneset_q=qvalue(geneset_p,lambda = 0,fdr.level = 0.05)$qvalues[c(sapply(genesets_interest,function(x) which(MSigDB$geneset.names==x)),length(MSigDB$genesets)+1,length(MSigDB$genesets)+2)]
results_p=cbind(results_p,geneset_p[c(sapply(genesets_interest,function(x) which(MSigDB$geneset.names==x)),length(MSigDB$genesets)+1,length(MSigDB$genesets)+2)])
results_q=cbind(results_q,geneset_q)
}
colnames(results_p)=colnames(results_q)=names(sig_list)
rownames(results_p)=rownames(results_q)=c(genesets_interest,"NMYC Down","NMYC Up")
name_str=paste0("_FCthresh",FC_thresh)
#write.xlsx(results_q,file=path.expand(paste0("~/Dropbox/ElementoLab/Prostate/MYCN/Data/EZH2/results/EZH2_RNAseq_GSEA_HypergeometricTest_Enrichments_GSEAuniverse45956",name_str,".xlsx")),sheetName="q-values",row.names=TRUE)
#write.xlsx(results_p,file=path.expand(paste0("~/Dropbox/ElementoLab/Prostate/MYCN/Data/EZH2/results/EZH2_RNAseq_GSEA_HypergeometricTest_Enrichments_GSEAuniverse45956",name_str,".xlsx")),sheetName="p-values",row.names=TRUE,append = TRUE)
################
# Make Heatmap #
################
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
pvals=results_q
pvals2=matrix(as.numeric(unlist(pvals)),dim(pvals));rownames(pvals2)=rownames(pvals);colnames(pvals2)=colnames(pvals)
pvals_col=pvals2
high.significant=unlist(pvals2[pvals2<0.01&!is.na(pvals2)])#;high.significant=high.significant[!is.na(high.significant)]
yellow.scale=rgb((colorRamp(c("red","yellow"))(range01(log((c(0.01,high.significant))))))/255)[2:(1+length(high.significant))]
yellow.scale=rgb((colorRamp(c("red","yellow"))(range01(sapply(high.significant,function(x) which(sort(high.significant,decreasing = FALSE)==x)[1]))))/255)
no.significant=unlist(pvals2[pvals2>0.05&!is.na(pvals2)])
blue.scale=rgb((colorRamp(c("white", "blue"))(range01((no.significant))))/255)
pvals_col[pvals2>0.05&!is.na(pvals2)]=blue.scale
pvals_col[pvals2<0.01&!is.na(pvals2)]=yellow.scale
pvals_col[pvals2>=0.01&pvals2<=0.05&!is.na(pvals2)]="#F8F8FF"
pvals_col[is.na(pvals2)]="#000000"
pvals_col2=t(pvals_col)
#pvals_col2=t(apply(pvals_col,2,rev))
#pvals_col2=apply(apply((pvals_col),2,rev),1,rev)
temp=matrix(1:length(unlist(pvals_col2)),dim(pvals_col2),byrow = FALSE)
rownames(temp)=(gsub("^X","",gsub("[.]"," ",colnames(pvals_col))))
colnames(temp)=gsub("[_]"," ",(rownames(pvals_col)))
par(mar=c(10,25,4.1,2.1))
image(x = temp,col=unlist(pvals_col2), axes = FALSE);box();grid(nx=(nrow(temp)),ny=(ncol(temp)),lwd=1,lty=1,col="black")
text(y=seq(0, by = 1/(ncol(temp)-1), length.out = ncol(temp)), par("usr")[1],labels = colnames(temp),xpd=TRUE,pos=2);
text(x=seq(0, by =1/(nrow(temp)-1),length.out = nrow(temp)), par("usr")[3] -0.05,labels = rownames(temp), srt=45,adj=1,xpd=TRUE);
genes_interest
sapply(genes_interest,function(x) siRNA_FC[genes2==x])
genes_interest=c("PMEPA1","NR3C2","NKX3-1","ACSL3","UAP1","SYT4","FKBP5","ELL2","KLK2","TMPRSS2","CENPN","MAF","KLK3","HERC3","ADAM7")
sapply(genes_interest,function(x) siRNA_FC[genes2==x])
subset_FC=rbind(data.table(FC=sapply(genes_interest,function(x) siRNA_FC[genes2==x]),Label="siEZH2"),data.table(FC=sapply(genes_interest,function(x) drug_rep1_FC[genes2==x]),Label="GSK343-1"),data.table(FC=sapply(genes_interest,function(x) drug_rep2_FC[genes2==x]),Label="GSK343-2"))
subset_FC
subset_FC=rbind(data.table(Gene=genes_interest,FC=sapply(genes_interest,function(x) siRNA_FC[genes2==x]),Label="siEZH2"),data.table(Gene=genes_interest,FC=sapply(genes_interest,function(x) drug_rep1_FC[genes2==x]),Label="GSK343-1"),data.table(Gene=genes_interest,FC=sapply(genes_interest,function(x) drug_rep2_FC[genes2==x]),Label="GSK343-2"))
subset_FC
boxplot(FC~Label,res,col=c("blue","darkblue"),ylab="FoldChange",outline=FALSE)
boxplot(FC~Label,subset_FC,col=c("blue","darkblue"),ylab="FoldChange",outline=FALSE)
barplot(FC~Label,subset_FC,col=c("blue","darkblue"),ylab="FoldChange",outline=FALSE)
barchart(FC~Gene,groups=Label,subset_FC,col=c("blue","darkblue"),ylab="FoldChange",outline=FALSE)
library(lattice)
barchart(FC~Gene,groups=Label,subset_FC,col=c("blue","darkblue"),ylab="FoldChange",outline=FALSE)
barchart(FC~Gene,groups=Label,subset_FC,col=c("grey","darkblue"),ylab="FoldChange",outline=FALSE)
barchart(FC~Gene,groups=Label,subset_FC,col=c("grey","blue","darkblue"),ylab="FoldChange",outline=FALSE)
barchart(FC~Gene,groups=Label,subset_FC,col=c("grey","greyblue","darkblue"),ylab="FoldChange",outline=FALSE)
barchart(FC~Gene,groups=Label,subset_FC,col=c("grey","greyblue","darkblue"),ylab="FoldChange",outline=FALSE)
barchart(FC~Gene,groups=Label,subset_FC,col=c("grey","lilac","darkblue"),ylab="FoldChange",outline=FALSE)
barchart(FC~Gene,groups=Label,subset_FC,col=c("grey","lilac","darkblue"),ylab="FoldChange",outline=FALSE)
barchart(FC~Gene,groups=Label,subset_FC,col=c("grey","lavendar","darkblue"),ylab="FoldChange",outline=FALSE)
barchart(FC~Gene,groups=Label,subset_FC,col=c("grey","lavender","darkblue"),ylab="FoldChange",outline=FALSE)
unique(subset_FC)
unique(subset_FC$Label)
subset_FC$Label=factor(x = subset_FC$Label,levels = c("siEZH2","GSK343-1","GSK343-2"))
barchart(FC~Gene,groups=Label,subset_FC,col=c("grey","lavender","darkblue"),ylab="FoldChange",outline=FALSE)
unique(subset_FC$Label)
legend("topright",legend = unique(subset_FC$Label),col = c("grey","lavender","darkblue"))
legend("topleft",legend = unique(subset_FC$Label),col = c("grey","lavender","darkblue"))
legend("upperleft",legend = unique(subset_FC$Label),col = c("grey","lavender","darkblue"))
legend("topleft",legend = unique(subset_FC$Label),col = c("grey","lavender","darkblue"))
legend(x=5,y=2,legend = unique(subset_FC$Label),col = c("grey","lavender","darkblue"))
legend(x=5,y=2,legend = unique(subset_FC$Label),col = c("grey","lavender","darkblue"))
legend("topright",legend = unique(subset_FC$Label),col = c("grey","lavender","darkblue"))
legend("topright",legend = as.vector(unique(subset_FC$Label))),col = c("grey","lavender","darkblue"))
as.vector(unique(subset_FC$Label))
legend("topright",legend = as.vector(unique(subset_FC$Label)),col = c("grey","lavender","darkblue"))
barchart(FC~Gene,groups=Label,subset_FC,col=c("grey","lavender","darkblue"),ylab="FoldChange",outline=FALSE,auto.key=TRUE)
my.settings <- list(
superpose.polygon=list(col=c("grey","lavender","darkblue"), border="transparent"),
strip.border=list(col="black")
)
barchart(FC~Gene,groups=Label,subset_FC,col=c("grey","lavender","darkblue"),ylab="FoldChange",outline=FALSE,auto.key=TRUE,par.settings = my.settings)
barchart(FC~Gene,groups=Label,subset_FC,col=c("grey","lavender","darkblue"),ylab="FoldChange",outline=FALSE,auto.key=list(corner = c(0.95, 1)),par.settings = my.settings)
barchart(FC~Gene,groups=Label,subset_FC,col=c("grey","lavender","darkblue"),ylab="FoldChange",outline=FALSE,auto.key=list(corner = c(0.1, 0.9)),par.settings = my.settings)
barchart(FC~Gene,groups=Label,subset_FC,col=c("grey","lavender","darkblue"),ylab="FoldChange",outline=FALSE,auto.key=list(corner = c(0.05, 0.95)),par.settings = my.settings)
barchart(FC~Gene,groups=Label,subset_FC,col=c("grey","lavender","darkblue"),ylab="FoldChange",outline=FALSE,auto.key=list(corner = c(0.05, 0.95)),par.settings = my.settings,las=2)
legend("topright",legend = as.vector(unique(subset_FC$Label)),col = c("grey","lavender","darkblue"))
barchart(FC~Gene,groups=Label,subset_FC,col=c("grey","lavender","darkblue"),ylab="FoldChange",outline=FALSE,auto.key=list(corner = c(0.05, 0.95)),par.settings = my.settings,las=2)
my.settings <- list(
superpose.polygon=list(col=c("grey","lavender","darkblue"), border="transparent")
)
barchart(FC~Gene,groups=Label,subset_FC,col=c("grey","lavender","darkblue"),ylab="FoldChange",outline=FALSE,auto.key=list(corner = c(0.05, 0.95)),par.settings = my.settings,las=2)
my.settings <- list(
superpose.polygon=list(col=c("grey","lavender","darkblue"), border="transparent"),
strip.border=list(col="black")
)
my.settings <- list(
superpose.polygon=list(col=c("grey","lavender","darkblue")),
strip.border=list(col="black")
)
barchart(FC~Gene,groups=Label,subset_FC,col=c("grey","lavender","darkblue"),ylab="FoldChange",outline=FALSE,auto.key=list(corner = c(0.05, 0.95)),par.settings = my.settings,las=2)
abline(y=1)
barchart(FC~Gene,groups=Label,subset_FC,col=c("grey","lavender","darkblue"),ylab="FoldChange",outline=FALSE,auto.key=list(corner = c(0.05, 0.95)),par.settings = my.settings,las=2,panel.grid(h=1, v=FALSE))
panel.grid(h=1, v=FALSE);barchart(FC~Gene,groups=Label,subset_FC,col=c("grey","lavender","darkblue"),ylab="FoldChange",outline=FALSE,auto.key=list(corner = c(0.05, 0.95)),par.settings = my.settings,las=2)
panel.grid(h=1, v=FALSE)
panel.grid(h=0.8, v=FALSE)
panel.grid(h=0.5, v=FALSE)
barchart(FC~Gene,groups=Label,subset_FC,col=c("grey","lavender","darkblue"),ylab="FoldChange",outline=FALSE,auto.key=list(corner = c(0.05, 0.95)),par.settings = my.settings,las=2)
panel.grid(h=0.5, v=FALSE)
panel.abline(h=1,col="red",lty=2)
panel.abline(h=0.5,col="red",lty=2)
barchart(FC~Gene,groups=Label,subset_FC,col=c("grey","lavender","darkblue"),ylab="FoldChange",outline=FALSE,auto.key=list(corner = c(0.05, 0.95)),par.settings = my.settings,las=2)
panel.abline(h=0.5,col="red",lty=2)
barchart(FC~Gene,groups=Label,subset_FC,col=c("grey","lavender","darkblue"),ylab="FoldChange",outline=FALSE,auto.key=list(corner = c(0.05, 0.95)),par.settings = my.settings,las=2)
panel.abline(h=0,col="red",lty=2)
panel.abline(h=-1,col="red",lty=2)
barchart(FC~Gene,groups=Label,subset_FC,col=c("grey","lavender","darkblue"),ylab="FoldChange",outline=FALSE,auto.key=list(corner = c(0.05, 0.95)),par.settings = my.settings,las=2)
abline(h=1)
barchart(FC~Gene,groups=Label,subset_FC,col=c("grey","lavender","darkblue"),ylab="Fold Change",outline=FALSE,auto.key=list(corner = c(0.05, 0.95)),par.settings = my.settings,las=2)
barchart(FC~Gene,groups=Label,subset_FC,col=c("grey","lavender","darkblue"),ylab="Fold Change",outline=FALSE,auto.key=list(corner = c(0.05, 0.95)),par.settings = my.settings,las=2)
barchart(FC~Gene,groups=Label,subset_FC,col=c("grey","lavender","darkblue"),ylab="Fold Change",outline=FALSE,auto.key=list(corner = c(0.05, 0.95)),par.settings = my.settings,las=2)
hist(subset_FC$FC)
sum(subset_FC>1)
sum(subset_FC$FC>1)
length(subset_FC$FC)
30/34
30/45
subset_FC$Gene=factor(x=subset_FC$Gene,levels = genes_interest)
barchart(FC~Gene,groups=Label,subset_FC,col=c("grey","lavender","darkblue"),ylab="Fold Change",outline=FALSE,auto.key=list(corner = c(0.05, 0.95)),par.settings = my.settings,las=2)
sum(subset_FC$FC[subset_FC$Label=="siEZH2"]>1)
sum(subset_FC$FC[subset_FC$Label=="siEZH2"]>1)/sum(subset_FC$Label=="siEZH2")
subset_FC$FC[subset_FC$Label=="siEZH2"]
sum(subset_FC$FC[subset_FC$Label!="siEZH2"]>1)/sum(subset_FC$Label!="siEZH2")
rm(list=ls())
library(biomaRt)
library(rbamtools)
library(GenomicRanges)
library(data.table)
library(ggplot2)
#############
# bam files #
#############
NMYC_file="~/Dropbox/ElementoLab/Prostate/MYCN/Data/ChIPseq/h3k27me3/bamfiles/h3k27me3_NMYC_S4_L004_R1_001.sorted.bam"
CTRL_file="~/Dropbox/ElementoLab/Prostate/MYCN/Data/ChIPseq/h3k27me3/bamfiles/h3k27me3_Ctrl_S3_L004_R1_001.sorted.bam"
INPUT_NMYC_file="~/Dropbox/ElementoLab/Prostate/MYCN/Data/ChIPseq/h3k27me3/bamfiles/Input_NMYC_S2_L004_R1_001.sorted.bam"
INPUT_CTRL_file="~/Dropbox/ElementoLab/Prostate/MYCN/Data/ChIPseq/h3k27me3/bamfiles/Input_Ctrl_S1_L004_R1_001.sorted.bam"
NMYC_reader <- bamReader(NMYC_file, idx=TRUE)
NMYC_reader_ids=getRefData(NMYC_reader)
NMYC_count=bamCountAll(NMYC_reader, verbose=TRUE)
NMYC_total=sum(NMYC_count$nAligns)
CTRL_reader <- bamReader(CTRL_file, idx=TRUE)
CTRL_reader_ids=getRefData(CTRL_reader)
CTRL_count=bamCountAll(CTRL_reader, verbose=TRUE)
CTRL_total=sum(CTRL_count$nAligns)
INPUT_NMYC_reader <- bamReader(INPUT_NMYC_file, idx=TRUE)
INPUT_NMYC_reader_ids=getRefData(INPUT_NMYC_reader)
INPUT_NMYC_count=bamCountAll(INPUT_NMYC_reader, verbose=TRUE)
INPUT_NMYC_total=sum(INPUT_NMYC_count$nAligns)
INPUT_CTRL_reader <- bamReader(INPUT_CTRL_file, idx=TRUE)
INPUT_CTRL_reader_ids=getRefData(INPUT_CTRL_reader)
INPUT_CTRL_count=bamCountAll(INPUT_CTRL_reader, verbose=TRUE)
INPUT_CTRL_total=sum(INPUT_CTRL_count$nAligns)
#####################
# Generate Promoter #
#   Annotation      #
#####################
LNCAP_DE=read.table("~/Dropbox/ElementoLab/Prostate/MYCN/Data/LnCAP/Results/DE-Genes/NMyc.DifferentialExpression.txt",stringsAsFactors = FALSE,sep="\t",header=TRUE)
allgenes=unique(LNCAP_DE$Gene)
ensembl_human = useMart(biomart = "ENSEMBL_MART_ENSEMBL",dataset="hsapiens_gene_ensembl", host = "may2012.archive.ensembl.org") #humans
promoter_size=2000;sizelabel="_2kb"
#promoter_size=5000;sizelabel="_5kb"
if(FALSE){
all_promoter_coords=data.table()
strands=c()
for(gene in allgenes){
query=getBM(gene,filters = "hgnc_symbol",attributes = c("hgnc_symbol", "chromosome_name","strand","transcript_start","transcript_end"),mart = ensembl_human)
query=query[query[,2] %in% c(1:22,"X","Y"),]
if(nrow(query)>0){
this_chr=unique(query[,2])
this_strand=unique(query[,3])
if(length(this_chr)>1){
cat(gene,"\n")
}
strands=c(strands,unique(query[,3]))
if(this_strand==(-1)){
this_TSS=query[1,5]
all_promoter_coords=rbind(all_promoter_coords,data.table(gene=gene,chr=this_chr,start=min(this_TSS),end=max(this_TSS)+promoter_size,strand="-"))
}else{
this_TSS=query[1,4]
all_promoter_coords=rbind(all_promoter_coords,data.table(gene=gene,chr=this_chr,start=min(this_TSS)-promoter_size,end=max(this_TSS),strand="+"))
}
}
}
saveRDS(all_promoter_coords,paste0("~/Dropbox/ElementoLab/Prostate/MYCN/Data/ChIPseq/h3k27me3/Results/Promoter_Counts_FC/all_promoter_coords",sizelabel,".rds"))
}else{
all_promoter_coords=readRDS("~/Dropbox/ElementoLab/Prostate/MYCN/Data/ChIPseq/h3k27me3/Results/Promoter_Counts_FC/5kb-upstream/all_promoter_coords_5kb.rds")
if(promoter_size==2000){
all_promoter_coords$end[all_promoter_coords$strand=="-"]=all_promoter_coords$end[all_promoter_coords$strand=="-"]-4000
all_promoter_coords$start[all_promoter_coords$strand=="+"]=all_promoter_coords$start[all_promoter_coords$strand=="+"]+4000
all_promoter_coords$start[all_promoter_coords$strand=="-"]=all_promoter_coords$start[all_promoter_coords$strand=="-"]-1000
all_promoter_coords$end[all_promoter_coords$strand=="+"]=all_promoter_coords$end[all_promoter_coords$strand=="+"]+1000
}
if(promoter_size==5000){
all_promoter_coords$end=all_promoter_coords$end+1500
all_promoter_coords$start=all_promoter_coords$start-1500
}
}
##################
# Count Reads in #
# NMYC Promoters #
##################
all_promoter_counts=data.table() #FC = NMYC/CTRL
for(i in 1:nrow(all_promoter_coords)){
try({
NMYC_range=bamRange(NMYC_reader, c(NMYC_reader_ids$ID[NMYC_reader_ids$SN==paste0("chr",all_promoter_coords$chr[i])],all_promoter_coords$start[i],all_promoter_coords$end[i]))
CTRL_range=bamRange(CTRL_reader, c(CTRL_reader_ids$ID[CTRL_reader_ids$SN==paste0("chr",all_promoter_coords$chr[i])],all_promoter_coords$start[i],all_promoter_coords$end[i]))
INPUT_NMYC_range=bamRange(INPUT_NMYC_reader, c(INPUT_NMYC_reader_ids$ID[INPUT_NMYC_reader_ids$SN==paste0("chr",all_promoter_coords$chr[i])],all_promoter_coords$start[i],all_promoter_coords$end[i]))
INPUT_CTRL_range=bamRange(INPUT_CTRL_reader, c(INPUT_CTRL_reader_ids$ID[INPUT_CTRL_reader_ids$SN==paste0("chr",all_promoter_coords$chr[i])],all_promoter_coords$start[i],all_promoter_coords$end[i]))
all_promoter_counts=rbind(all_promoter_counts,data.table(gene=all_promoter_coords$gene[i],NMYC=size(NMYC_range),CTRL=size(CTRL_range),NMYCnorm=(size(NMYC_range)/NMYC_total)/(size(INPUT_NMYC_range)/INPUT_NMYC_total),CTRL_norm=(size(CTRL_range)/CTRL_total)/(size(INPUT_CTRL_range)/INPUT_CTRL_total),FC=(size(NMYC_range)/NMYC_total)/(size(CTRL_range)/CTRL_total),InputFC=(size(INPUT_NMYC_range)/INPUT_NMYC_total)/(size(INPUT_CTRL_range)/INPUT_CTRL_total),FC2=((size(NMYC_range)/NMYC_total)/(size(INPUT_NMYC_range)/INPUT_NMYC_total))/((size(CTRL_range)/CTRL_total)/(size(INPUT_CTRL_range)/INPUT_CTRL_total))))
})
}
saveRDS(all_promoter_counts,file = paste0("~/Dropbox/ElementoLab/Prostate/MYCN/Data/ChIPseq/h3k27me3/Results/Promoter_Counts_FC/all_promoter_FC",sizelabel,".rds"))
all_promoter_counts2=all_promoter_counts
all_promoter_counts2=all_promoter_counts2[!is.nan(all_promoter_counts2$FC2),]
all_promoter_counts2$FC2[all_promoter_counts2$FC2==Inf]=100
all_promoter_counts2=all_promoter_counts2[order(all_promoter_counts2$CTRL_norm,decreasing = TRUE),]
all_promoter_counts2=all_promoter_counts2[order(all_promoter_counts2$NMYCnorm),]
all_promoter_counts2=all_promoter_counts2[order(all_promoter_counts2$FC2),]
all_promoter_counts3=all_promoter_counts2
write.table(data.table(Gene=all_promoter_counts3$gene,FC=all_promoter_counts3$FC2,CTRL=1),file = paste0("~/Dropbox/ElementoLab/Prostate/MYCN/Data/ChIPseq/h3k27me3/Results/Promoter_Counts_FC/all_promoter_FC2",sizelabel,".txt"),row.names=FALSE,sep="\t",quote=FALSE)
#write.table(data.table(Gene=all_promoter_counts3$gene,NMYC=all_promoter_counts3$NMYCnorm,CTRL=all_promoter_counts3$CTRL_norm),file = paste0("~/Dropbox/ElementoLab/Prostate/MYCN/Data/ChIPseq/h3k27me3/Results/Promoter_Counts_FC/all_promoter_counts",sizelabel,".txt"),row.names=FALSE,sep="\t",quote=FALSE)
all_promoter_counts3$FC2[all_promoter_counts3$FC2==0]=0.0001
write.table(data.table(Gene=all_promoter_counts3$gene,NMYC=all_promoter_counts3$NMYCnorm,CTRL=all_promoter_counts3$CTRL_norm,FC=all_promoter_counts3$FC2,log2FC=log2(all_promoter_counts3$FC2)),file = paste0("~/Dropbox/ElementoLab/Prostate/MYCN/Data/ChIPseq/h3k27me3/Results/Promoter_Counts_FC/all_promoter_res",sizelabel,".txt"),row.names=FALSE,sep="\t",quote=FALSE)
temp=data.table(Gene=all_promoter_counts3$gene,NMYCcount=all_promoter_counts3$NMYC,CTRLcount=all_promoter_counts3$CTRL,NMYC=all_promoter_counts3$NMYCnorm,CTRL=all_promoter_counts3$CTRL_norm,FC=all_promoter_counts3$FC2,log2FC=log2(all_promoter_counts3$FC2))
thresh=1
FC_thresh=1
CTRL_genes=temp$Gene[temp$log2FC<(-1*FC_thresh)&temp$CTRL>thresh]
NMYC_genes=temp$Gene[temp$log2FC>FC_thresh&temp$NMYC>thresh]
overlap_genes=temp$Gene[abs(temp$log2FC)<FC_thresh&temp$NMYC>thresh&temp$CTRL>thresh]
try({dev.off()});draw.pairwise.venn(area1=length(NMYC_genes)+length(overlap_genes),area2=length(CTRL_genes)+length(overlap_genes),cross.area=length(overlap_genes),ext.percent = rep(0, 3),cat.pos=c(190,175),category = c("LNCaP-NMYC","LNCaP-CTRL"),main="h3k27me3 at Gene Promoters",fill=c("light blue","red"),margin=0.05,cat.fontface="bold",scaled=TRUE)
try({dev.off()});draw.triple.venn(area1=length(NMYC_genes)+length(overlap_genes),area2=length(CTRL_genes)+length(overlap_genes),area3=length(LNCAP_signature),n12=length(overlap_genes),n13=length(intersect(NMYC_genes,LNCAP_signature))+length(intersect(overlap_genes,LNCAP_signature)),n23=length(intersect(CTRL_genes,LNCAP_signature))+length(intersect(overlap_genes,LNCAP_signature)),n123=length(intersect(overlap_genes,LNCAP_signature)),ext.percent = rep(0, 3),category = c("LNCAP-NMYC","LNCAP-CTRL","NMYC Signature"),fill=c("light blue","red","yellow"),margin=0.1,cat.fontface="bold")
length(intersect(NMYC_genes,LNCAP_down))/length(intersect(NMYC_genes,LNCAP_signature))
length(intersect(CTRL_genes,LNCAP_up))/length(intersect(CTRL_genes,LNCAP_signature))
all_promoter_coords=readRDS("~/Dropbox/ElementoLab/Prostate/MYCN/Data/ChIPseq/h3k27me3/Results/Promoter_Counts_FC/2kb-upstream/all_promoter_coords_5kb.rds")
all_promoter_coords=readRDS("~/Dropbox/ElementoLab/Prostate/MYCN/Data/ChIPseq/h3k27me3/Results/Promoter_Counts_FC/2kb-upstream/all_promoter_coords_2kb.rds")
all_promoter_coords=readRDS("~/Dropbox/ElementoLab/Prostate/MYCN/Data/ChIPseq/h3k27me3/Results/Promoter_Counts_FC/2kb-upstream/all_promoter_coords_2kb.rds")
all_promoter_counts=data.table() #FC = NMYC/CTRL
for(i in 1:nrow(all_promoter_coords)){
try({
NMYC_range=bamRange(NMYC_reader, c(NMYC_reader_ids$ID[NMYC_reader_ids$SN==paste0("chr",all_promoter_coords$chr[i])],all_promoter_coords$start[i],all_promoter_coords$end[i]))
CTRL_range=bamRange(CTRL_reader, c(CTRL_reader_ids$ID[CTRL_reader_ids$SN==paste0("chr",all_promoter_coords$chr[i])],all_promoter_coords$start[i],all_promoter_coords$end[i]))
INPUT_NMYC_range=bamRange(INPUT_NMYC_reader, c(INPUT_NMYC_reader_ids$ID[INPUT_NMYC_reader_ids$SN==paste0("chr",all_promoter_coords$chr[i])],all_promoter_coords$start[i],all_promoter_coords$end[i]))
INPUT_CTRL_range=bamRange(INPUT_CTRL_reader, c(INPUT_CTRL_reader_ids$ID[INPUT_CTRL_reader_ids$SN==paste0("chr",all_promoter_coords$chr[i])],all_promoter_coords$start[i],all_promoter_coords$end[i]))
all_promoter_counts=rbind(all_promoter_counts,data.table(gene=all_promoter_coords$gene[i],NMYC=size(NMYC_range),CTRL=size(CTRL_range),NMYCnorm=(size(NMYC_range)/NMYC_total)/(size(INPUT_NMYC_range)/INPUT_NMYC_total),CTRL_norm=(size(CTRL_range)/CTRL_total)/(size(INPUT_CTRL_range)/INPUT_CTRL_total),FC=(size(NMYC_range)/NMYC_total)/(size(CTRL_range)/CTRL_total),InputFC=(size(INPUT_NMYC_range)/INPUT_NMYC_total)/(size(INPUT_CTRL_range)/INPUT_CTRL_total),FC2=((size(NMYC_range)/NMYC_total)/(size(INPUT_NMYC_range)/INPUT_NMYC_total))/((size(CTRL_range)/CTRL_total)/(size(INPUT_CTRL_range)/INPUT_CTRL_total))))
})
}
saveRDS(all_promoter_counts,file = paste0("~/Dropbox/ElementoLab/Prostate/MYCN/Data/ChIPseq/h3k27me3/Results/Promoter_Counts_FC/all_promoter_FC",sizelabel,".rds"))
all_promoter_counts2=all_promoter_counts
all_promoter_counts2=all_promoter_counts2[!is.nan(all_promoter_counts2$FC2),]
all_promoter_counts2$FC2[all_promoter_counts2$FC2==Inf]=100
all_promoter_counts2=all_promoter_counts2[order(all_promoter_counts2$CTRL_norm,decreasing = TRUE),]
all_promoter_counts2=all_promoter_counts2[order(all_promoter_counts2$NMYCnorm),]
all_promoter_counts2=all_promoter_counts2[order(all_promoter_counts2$FC2),]
all_promoter_counts3=all_promoter_counts2
write.table(data.table(Gene=all_promoter_counts3$gene,FC=all_promoter_counts3$FC2,CTRL=1),file = paste0("~/Dropbox/ElementoLab/Prostate/MYCN/Data/ChIPseq/h3k27me3/Results/Promoter_Counts_FC/all_promoter_FC2",sizelabel,".txt"),row.names=FALSE,sep="\t",quote=FALSE)
#write.table(data.table(Gene=all_promoter_counts3$gene,NMYC=all_promoter_counts3$NMYCnorm,CTRL=all_promoter_counts3$CTRL_norm),file = paste0("~/Dropbox/ElementoLab/Prostate/MYCN/Data/ChIPseq/h3k27me3/Results/Promoter_Counts_FC/all_promoter_counts",sizelabel,".txt"),row.names=FALSE,sep="\t",quote=FALSE)
all_promoter_counts3$FC2[all_promoter_counts3$FC2==0]=0.0001
write.table(data.table(Gene=all_promoter_counts3$gene,NMYC=all_promoter_counts3$NMYCnorm,CTRL=all_promoter_counts3$CTRL_norm,FC=all_promoter_counts3$FC2,log2FC=log2(all_promoter_counts3$FC2)),file = paste0("~/Dropbox/ElementoLab/Prostate/MYCN/Data/ChIPseq/h3k27me3/Results/Promoter_Counts_FC/all_promoter_res",sizelabel,".txt"),row.names=FALSE,sep="\t",quote=FALSE)
temp=data.table(Gene=all_promoter_counts3$gene,NMYCcount=all_promoter_counts3$NMYC,CTRLcount=all_promoter_counts3$CTRL,NMYC=all_promoter_counts3$NMYCnorm,CTRL=all_promoter_counts3$CTRL_norm,FC=all_promoter_counts3$FC2,log2FC=log2(all_promoter_counts3$FC2))
thresh=1
FC_thresh=1
CTRL_genes=temp$Gene[temp$log2FC<(-1*FC_thresh)&temp$CTRL>thresh]
NMYC_genes=temp$Gene[temp$log2FC>FC_thresh&temp$NMYC>thresh]
overlap_genes=temp$Gene[abs(temp$log2FC)<FC_thresh&temp$NMYC>thresh&temp$CTRL>thresh]
try({dev.off()});draw.pairwise.venn(area1=length(NMYC_genes)+length(overlap_genes),area2=length(CTRL_genes)+length(overlap_genes),cross.area=length(overlap_genes),ext.percent = rep(0, 3),cat.pos=c(190,175),category = c("LNCaP-NMYC","LNCaP-CTRL"),main="h3k27me3 at Gene Promoters",fill=c("light blue","red"),margin=0.05,cat.fontface="bold",scaled=TRUE)
try({dev.off()});draw.triple.venn(area1=length(NMYC_genes)+length(overlap_genes),area2=length(CTRL_genes)+length(overlap_genes),area3=length(LNCAP_signature),n12=length(overlap_genes),n13=length(intersect(NMYC_genes,LNCAP_signature))+length(intersect(overlap_genes,LNCAP_signature)),n23=length(intersect(CTRL_genes,LNCAP_signature))+length(intersect(overlap_genes,LNCAP_signature)),n123=length(intersect(overlap_genes,LNCAP_signature)),ext.percent = rep(0, 3),category = c("LNCAP-NMYC","LNCAP-CTRL","NMYC Signature"),fill=c("light blue","red","yellow"),margin=0.1,cat.fontface="bold")
CTRL_genes
NDRG1 %in% NMYC_genes
("NDRG1" %in% NMYC_genes)
("NDRG1" %in% CTRL_genes)
("NDRG1" %in% overlap_genes)
("NR3C2" %in% NMYC_genes)
("MAF" %in% NMYC_genes)
("HERC3" %in% NMYC_genes)
("ACSL3" %in% NMYC_genes)
("SYT4" %in% NMYC_genes)
intersect(c("PMEPA1","NR3C2","NKX3-1","ACSL3","UAP1","SYT4","FKBP5","ELL2","KLK2","TMPRSS2","CENPN","MAF","KLK3","HERC3","ADAM7"),NMYC_genes)
intersect(c("PMEPA1","NR3C2","NKX3-1","ACSL3","UAP1","SYT4","FKBP5","ELL2","KLK2","TMPRSS2","CENPN","MAF","KLK3","HERC3","ADAM7"),overlap_genes)
intersect(c("PMEPA1","NR3C2","NKX3-1","ACSL3","UAP1","SYT4","FKBP5","ELL2","KLK2","TMPRSS2","CENPN","MAF","KLK3","HERC3","ADAM7"),CTRL_genes)
library(data.table)
library(ggplot2)
library(RColorBrewer)
library(lattice)
expr=read.table("~/Dropbox/ElementoLab/Prostate/MYCN/Data/EZH2/expression/EZH2.pooled.FPKM.20160519.txt",sep="\t",stringsAsFactors = FALSE,header=TRUE)
expr2=expr[rowSums(expr[,2:ncol(expr)])!=0,]
genes2=expr[rowSums(expr[,2:ncol(expr)])!=0,1]
siRNA_FC=expr2[,6]/expr2[,5]
drug_rep1_FC=expr2[,3]/expr2[,2]
drug_rep2_FC=expr2[,4]/expr2[,2]
siRNA_FC[genes2=="EZH2"]
drug_rep1_FC[genes2=="EZH2"]
drug_rep2_FC[genes2=="EZH2"]
plot(drug_rep1_FC,drug_rep2_FC,xlim=c(0,50),ylim=c(0,50),xlab="GSK343-1/Vehicle Fold Change",ylab="GSK343-2/Vehicle Fold Change",main="Drug Replicates\nFold Change")
cor(drug_rep1_FC[!is.na(drug_rep1_FC)&!is.na(drug_rep2_FC)&!is.nan(drug_rep1_FC)&!is.nan(drug_rep2_FC)],drug_rep2_FC[!is.nan(drug_rep1_FC)&!is.nan(drug_rep2_FC)&!is.na(drug_rep1_FC)&!is.na(drug_rep2_FC)])
my.settings <- list(
superpose.polygon=list(col=c("grey","lavender","darkblue")),
strip.border=list(col="black")
)
genes_interest=c("PMEPA1","NR3C2","NKX3-1","ACSL3","UAP1","SYT4","FKBP5","ELL2","KLK2","TMPRSS2","CENPN","MAF","KLK3","HERC3","ADAM7")
subset_FC=rbind(data.table(Gene=genes_interest,FC=sapply(genes_interest,function(x) siRNA_FC[genes2==x]),Label="siEZH2"),data.table(Gene=genes_interest,FC=sapply(genes_interest,function(x) drug_rep1_FC[genes2==x]),Label="GSK343-1"),data.table(Gene=genes_interest,FC=sapply(genes_interest,function(x) drug_rep2_FC[genes2==x]),Label="GSK343-2"))
subset_FC$Label=factor(x = subset_FC$Label,levels = c("siEZH2","GSK343-1","GSK343-2"))
subset_FC$Gene=factor(x=subset_FC$Gene,levels = genes_interest)
barchart(FC~Gene,groups=Label,subset_FC,col=c("grey","lavender","darkblue"),ylab="Fold Change",outline=FALSE,auto.key=list(corner = c(0.05, 0.95)),par.settings = my.settings,las=2)
expr3=expr2[,2:ncol(expr2)]
colnames(expr3)=gsub("[_]"," ",colnames(expr3))
colnames(expr3)=gsub("[.]"," ",colnames(expr3))
par(mar=c(12.1,4.1,4.1,2.1))
boxplot(log2(expr3+1),las=2,ylab="log2(RPKM+1)")
par(mar=c(5.1,4.1,4.1,2.1))
plot(log2(expr3[,3]+1),log2(expr3[,4]+1),xlab="GSK343-1 log2(RPKM+1)",ylab="GSK343-2 log2(RPKM+1)",main="GSK343 Replicates")
text(x=3,y=10,labels = paste0("Pearson r = ",round(cor(expr3[,3],expr3[,4]),4)),col="red")
LNCAP_signature = read.table("~/Dropbox/ElementoLab/Prostate/MYCN/Data/LnCAP/Results/TopNMYCgenes_20150409.txt",sep="\t",stringsAsFactors = FALSE)[,1]
LNCAP_FC = read.table("~/Dropbox/ElementoLab/Prostate/MYCN/Data/LnCAP/Results/LnCAP.ordered1.foldChange.rnk",stringsAsFactors = FALSE)
LNCAP_down = LNCAP_signature[LNCAP_signature %in% LNCAP_FC[LNCAP_FC[,2]<0,1]]
LNCAP_up = LNCAP_signature[LNCAP_signature %in% LNCAP_FC[LNCAP_FC[,2]>0,1]]
#write(paste(LNCAP_down,collapse="\n"),file=path.expand("~/Dropbox/ElementoLab/Prostate/MYCN/Data/LnCAP/Down_signature.txt"))
#write(paste(LNCAP_up,collapse="\n"),file=path.expand("~/Dropbox/ElementoLab/Prostate/MYCN/Data/LnCAP/Up_signature.txt"))
counts=read.table("~/Dropbox/ElementoLab/Prostate/MYCN/Data/EZH2/genecounts/pooled.genecounts.20160519",fill=T,sep="\t",stringsAsFactors = FALSE,header=TRUE)
counts_tail=counts[grep("^_",counts[,1]),]
counts2=counts[which(!grepl("^_",counts[,1])),]
counts_tail[5,2:ncol(counts_tail)]/colSums(counts2[,2:ncol(counts)])
this_colors=brewer.pal(4, name="Dark2")#c("aquamarine4","chocolate3","darkorchid4")
siRNA_FC_df=rbind(data.table(FC=siRNA_FC,Label="All Genes"),data.table(FC=siRNA_FC[which(genes2 %in% LNCAP_down)],Label="NMYC-DN"),data.table(FC=siRNA_FC[which(genes2 %in% LNCAP_up)],Label="NMYC-UP"))
ggplot(data = siRNA_FC_df,aes(x=log2(FC),fill=Label))+geom_density(alpha=0.5)+xlim(c(-2,2))+scale_fill_manual(values = c("black",this_colors[c(3,4)]))+xlab("log2(siRNA EZH2 / siRNA Ctrl)")+theme_classic()+ggtitle("siRNA EZH2 vs siRNA Ctrl\nFold Change")
GSK343_FC_df=rbind(data.table(FC=drug_rep1_FC,Label="All Genes"),data.table(FC=drug_rep1_FC[which(genes2 %in% LNCAP_down)],Label="NMYC-DN"),data.table(FC=drug_rep1_FC[which(genes2 %in% LNCAP_up)],Label="NMYC-UP"),data.table(FC=drug_rep2_FC,Label="All Genes"),data.table(FC=drug_rep2_FC[which(genes2 %in% LNCAP_down)],Label="NMYC-DN"),data.table(FC=drug_rep2_FC[which(genes2 %in% LNCAP_up)],Label="NMYC-UP"))
ggplot(data = GSK343_FC_df,aes(x=log2(FC),fill=Label))+geom_density(alpha=0.5)+xlim(c(-2,2))+scale_fill_manual(values = c("black",this_colors[c(3,4)]))+xlab("log2(GSK343/Vehicle)")+theme_classic()+ggtitle("GSK343 vs Vehicle Fold Change")
GSK343_1_FC_df=rbind(data.table(FC=drug_rep1_FC,Label="All Genes"),data.table(FC=drug_rep1_FC[which(genes2 %in% LNCAP_down)],Label="NMYC-DN"),data.table(FC=drug_rep1_FC[which(genes2 %in% LNCAP_up)],Label="NMYC-UP"))
ggplot(data = GSK343_1_FC_df,aes(x=log2(FC),fill=Label))+geom_density(alpha=0.5)+xlim(c(-2,2))+scale_fill_manual(values = c("black",this_colors[c(3,4)]))+xlab("log2(GSK343/Vehicle)")+theme_classic()+ggtitle("GSK343 vs Vehicle Fold Change")
GSK343_2_FC_df=rbind(data.table(FC=drug_rep2_FC,Label="All Genes"),data.table(FC=drug_rep2_FC[which(genes2 %in% LNCAP_down)],Label="NMYC-DN"),data.table(FC=drug_rep2_FC[which(genes2 %in% LNCAP_up)],Label="NMYC-UP"))
ggplot(data = GSK343_2_FC_df,aes(x=log2(FC),fill=Label))+geom_density(alpha=0.5)+xlim(c(-2,2))+scale_fill_manual(values = c("black",this_colors[c(3,4)]))+xlab("log2(GSK343/Vehicle)")+theme_classic()+ggtitle("GSK343 vs Vehicle Fold Change")
library(GSEABase)
library(xlsx)
library(GSA)
library(qvalue)
MSigDB=GSA.read.gmt("~/Dropbox/ElementoLab/Resources/MSigDB/merge_h_c2.all.v5.1.symbols.gmt")
genesets_interest=c("NUYTTEN_EZH2_TARGETS_UP","BENPORATH_SUZ12_TARGETS","KONDO_EZH2_TARGETS","MEISSNER_BRAIN_HCP_WITH_H3K4ME3_AND_H3K27ME3","BENPORATH_ES_WITH_H3K27ME3","BENPORATH_EED_TARGETS","BENPORATH_PRC2_TARGETS","HALLMARK_ANDROGEN_RESPONSE","NELSON_RESPONSE_TO_ANDROGEN_UP","DOANE_RESPONSE_TO_ANDROGEN_UP","HALLMARK_EPITHELIAL_MESENCHYMAL_TRANSITION")
genesets_interest[!genesets_interest %in% MSigDB$geneset.names] #check
universe_size=45956
FC_thresh=0.75
siRNA_DN=genes2[log2(siRNA_FC)<(-1*FC_thresh)]
siRNA_UP=genes2[log2(siRNA_FC)>(FC_thresh)]
GSK343_rep1_DN=genes2[log2(drug_rep1_FC)<(-1*FC_thresh)]
GSK343_rep1_UP=genes2[log2(drug_rep1_FC)>(FC_thresh)]
GSK343_rep2_DN=genes2[log2(drug_rep2_FC)<(-1*FC_thresh)]
GSK343_rep2_UP=genes2[log2(drug_rep2_FC)>(FC_thresh)]
sig_list=list(siRNA_DN,GSK343_rep1_DN,GSK343_rep2_DN,siRNA_UP,GSK343_rep1_UP,GSK343_rep2_UP)
names(sig_list)=c("siRNA-EZH2_DN","GSK343_rep1_DN","GSK343_rep2_DN","siRNA-EZH2_UP","GSK343_rep1_UP","GSK343_rep2_UP")
runApp("~/Dropbox/ElementoLab/ClinTox/feature_interpretation/PrOCTOR/model_interpretation")
library(shiny)
library(shinyjs)
runApp("~/Dropbox/ElementoLab/ClinTox/feature_interpretation/PrOCTOR/model_interpretation")
library(shiny)
library(shinyjs)
library(data.table)
library(plyr)
library(htmlwidgets)
library(ggplot2)
library(randomForest)
library(grid)
require(gridExtra)
library(Cairo)
load("initial_values.RData")
setwd("~/Dropbox/ElementoLab/ClinTox/feature_interpretation/PrOCTOR/model_interpretation/")
library(shiny)
library(shinyjs)
library(data.table)
library(plyr)
library(htmlwidgets)
library(ggplot2)
library(randomForest)
library(grid)
require(gridExtra)
library(Cairo)
load("initial_values.RData")
runApp("~/Dropbox/ElementoLab/ClinTox/feature_interpretation/PrOCTOR/model_interpretation")
runApp("~/Dropbox/ElementoLab/ClinTox/feature_interpretation/PrOCTOR/model_interpretation")
